# Generated by Django 3.1.6 on 2021-04-13 13:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Distrito',
            },
        ),
        migrations.CreateModel(
            name='HistoricGeneral',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(max_length=100)),
                ('cAutonoma', models.CharField(default=0, max_length=50, verbose_name='Nombre')),
                ('confirmedPDIA', models.IntegerField(default=0, verbose_name='Confirmados PDIA')),
                ('totalConfirmed', models.IntegerField(default=0, verbose_name='Total Confirmados')),
                ('Hospitalized', models.IntegerField(default=0, verbose_name='Hospitalizados')),
                ('ICU', models.IntegerField(default=0, verbose_name='UCIS')),
                ('deceased', models.IntegerField(default=0, verbose_name='Fallecidos')),
            ],
            options={
                'verbose_name': 'Histórico de datos en toda la región de Andalucía',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Provincia',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Comunidad Autónoma',
            },
        ),
        migrations.CreateModel(
            name='Township',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('distrit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AndaluciaCOVID_Dashboard.district', verbose_name='Distrito')),
            ],
            options={
                'verbose_name': 'Municipio',
            },
        ),
        migrations.CreateModel(
            name='HistoricTownship',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(default='', max_length=100, verbose_name='Fecha de diagnóstico')),
                ('Confirmados_PCR_TA', models.IntegerField(default=0, verbose_name='Confirmados por PCR TOTAL')),
                ('Confirmados_PCR_TA_14d', models.IntegerField(default=0, verbose_name='Confirmados PCR 14 días')),
                ('confirmed14100hab', models.IntegerField(default=0, verbose_name='Confirmados 14 días x 100.000 hab')),
                ('totalConfirmed', models.IntegerField(default=0, verbose_name='Confirmados totales')),
                ('deceases', models.IntegerField(default=0, verbose_name='Fallecidos')),
                ('township', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.CASCADE, to='AndaluciaCOVID_Dashboard.township', verbose_name='Municipio')),
            ],
            options={
                'verbose_name': 'Histórico de datos por municipio',
            },
        ),
        migrations.CreateModel(
            name='HistoricProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(default='', max_length=100, verbose_name='Fecha de diagnóstico')),
                ('confirmedPDIA', models.IntegerField(default=0, verbose_name='Confirmados PDIA')),
                ('totalConfirmed', models.IntegerField(default=0, verbose_name='Total Confirmados')),
                ('Hospitalized', models.IntegerField(default=0, verbose_name='Hospitalizados')),
                ('ICU', models.IntegerField(default=0, verbose_name='UCIS')),
                ('deceased', models.IntegerField(default=0, verbose_name='Fallecidos')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AndaluciaCOVID_Dashboard.province', verbose_name='Provincia')),
            ],
            options={
                'verbose_name': 'Histórico de datos por Provincia',
            },
        ),
        migrations.CreateModel(
            name='HistoricDistrit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(default='', max_length=100, verbose_name='Fecha de diagnóstico')),
                ('Confirmados_PCR_TA', models.IntegerField(default=0, verbose_name='Confirmados por PCR TOTAL')),
                ('Confirmados_PCR_TA_14d', models.IntegerField(default=0, verbose_name='Confirmados PCR 14 días')),
                ('confirmed14100hab', models.IntegerField(default=0, verbose_name='Confirmados 14 días x 100.000 hab')),
                ('totalConfirmed', models.IntegerField(default=0, verbose_name='Confirmados totales')),
                ('deceases', models.IntegerField(default=0, verbose_name='Fallecidos')),
                ('distr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='AndaluciaCOVID_Dashboard.district', verbose_name='Distrito')),
            ],
            options={
                'verbose_name': 'Histórico de datos por distrito sanitario',
            },
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AndaluciaCOVID_Dashboard.province', verbose_name='Provincia'),
        ),
        migrations.CreateModel(
            name='AcumulatedProvinces',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(max_length=100)),
                ('confirmedPDIA', models.IntegerField(default=0, verbose_name='Confirmados PDIA')),
                ('aument', models.IntegerField(default=0, verbose_name='Aumento con el día anterior')),
                ('totalConfirmed', models.IntegerField(default=0, verbose_name='Total Confirmados')),
                ('Hospitalized', models.IntegerField(default=0, verbose_name='Hospitalizados')),
                ('pcr14days', models.IntegerField(default=0, verbose_name='Confirmados PCR 14 días')),
                ('pcr7days', models.IntegerField(default=0, verbose_name='Confirmados PCR 7 días')),
                ('ICU', models.IntegerField(default=0, verbose_name='UCIS')),
                ('deceased', models.IntegerField(default=0, verbose_name='Fallecidos')),
                ('recovered', models.IntegerField(default=0, verbose_name='Curados')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AndaluciaCOVID_Dashboard.province', verbose_name='Provincia')),
            ],
            options={
                'verbose_name': 'Datos acumulados en las provincias de Andalucia',
            },
        ),
        migrations.AddConstraint(
            model_name='historictownship',
            constraint=models.UniqueConstraint(fields=('date', 'township'), name='CONSTR_NO_REPEAT_REGISTRTOWN'),
        ),
        migrations.AddConstraint(
            model_name='historicprovince',
            constraint=models.UniqueConstraint(fields=('date', 'province'), name='CONSTR_NO_REPEAT_REGISTRPROV'),
        ),
        migrations.AddConstraint(
            model_name='historicdistrit',
            constraint=models.UniqueConstraint(fields=('date', 'distr'), name='CONSTR_NO_REPEAT_REGISTRDISTR'),
        ),
    ]
